version: "3.9" # optional since v1.27.0
services:

  # postgresql:
  #   build:
  #     context: ./postgresql
  #   restart: unless-stopped
  #   volumes:
  #     - postgresql-data:/var/lib/postgresql/data
  #   env_file: 
  #     - postgresql/postgresql.env
  #   ports:
  #     - 5432:5432
  #   # networks:
  #   #   - backend

  # signaling:
  #   image: peerjs/peerjs-server
  #   ports:
  #     - 9000:9000

  media_server:
    # image: kurento/kurento-media-server:latest
    container_name: kurento
    build:
      context: .
      dockerfile: kurento/Dockerfile
    environment: 
      - AWS_BUCKET_NAME=td-tdx-stg-us-east-1-s3-ur
      - AWS_ACCESS_KEY_ID=you_know
      - AWS_SECRET_KEY=you-know
      - KMS_MIN_PORT=5000
      - KMS_MAX_PORT=5050
      - GST_DEBUG="2,Kurento*:5,kms*:5,sdp*:4,webrtc*:4,*rtpendpoint:4,rtp*handler:4,rtpsynchronizer:4,agnosticbin:4"
    ports: 
      - 8888:8888
      - 5000-5050:5000-5050/udp

#   turn:
#     image: coturn/coturn
#     restart: always
#     volumes:
#       - ${PWD}/coturn/turnserver.conf:/etc/turnserver.conf
#       - ${PWD}/coturn/privkey.pem:/etc/ssl/private/privkey.pem
#       - ${PWD}/coturn/cert.pem:/etc/ssl/certs/cert.pem
#     ports:
# ## STUN/TURN
#       - "3478:3478"
#       - "3478:3478/udp"
#       - "3479:3479"
#       - "3479:3479/udp"
#       - "80:80"
#       - "80:80/udp"
# ## STUN/TURN SSL
#       - "5349:5349"
#       - "5349:5349/udp"
#       - "5350:5350"
#       - "5350:5350/udp"
#       - "443:443"
#       - "443:443/udp"
# # Relay Ports
# #      - "49152-65535:49152-65535"
# #      - "49152-65535:49152-65535/udp"
#     # networks:
#     #   - frontend
#     #   - backend
#     depends_on:
#       - postgresql
#     env_file:
#       - coturn/coturn.env
# # DB
#       - postgresql/postgresql.env
# volumes:
#   postgresql-data:

# # networks:
# #   frontend:
# #     driver: bridge
# #     ipam:
# #       driver: default
# #       config:
# #         - subnet: 172.16.238.0/24
# #   backend:
# #     internal: true
